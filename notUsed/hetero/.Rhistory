knitr::opts_chunk$set(echo = TRUE)
allData <- NULL
for(n in c(100,500,1000,5000)){
allData <- rbind(allData, cbind(readRDS(paste0("goodNormalxyBig",x1Type,"_n",n,"_2022.RDS"))$results,x1Type))
}
allData <- NULL
for(n in c(100,500,1000,5000)){
allData <- rbind(allData, cbind(readRDS(paste0("goodNormalxyBig_n",n,"_2022.RDS"))$results,x1Type))
}
allData <- NULL
for(n in c(100,500,1000,5000)){
allData <- rbind(allData, readRDS(paste0("goodNormalxyBig_n",n,"_2022.RDS"))$results)
}
library(ggplot2)
library(reshape)
allData$Method <- paste(allData$Method,allData$x1Type)
allData <- allData[,-ncol(allData)]
head(allData)
unique(allData$tau)
knitr::opts_chunk$set(echo = TRUE)
allData <- NULL
for(n in c(100,500,1000,5000)){
allData <- rbind(allData, readRDS(paste0("goodHeteroxyBig_n",n,"_2022.RDS"))$results)
}
library(ggplot2)
library(reshape)
allData$Method <- paste(allData$Method,allData$x1Type)
allData <- allData[,-ncol(allData)]
head(allData)
unique(allData$tau)
allData <- NULL
for(n in c(100,500,1000,5000)){
allData <- rbind(allData, readRDS(paste0("goodHeteroxyBig_n",n,"_2022.RDS"))$results)
}
library(ggplot2)
library(reshape)
allData$Method <- paste(allData$Method,allData$x1Type)
allData <- allData[,-ncol(allData)]
diffMissInter <- allData
missPlotData <- melt(diffMissInter, id.vars=c("Method","tau","m","rho","n","ycoef"))
cData <- subset(missPlotData, variable %in% c("B_IntervalCoverage1","B_IntervalCoverage2","B_IntervalCoverage3","B_IntervalCoverage4"))
qplot(x=log(n),y=value, data=cData, color=Method) + facet_wrap(~variable*m)
mseData <- subset(missPlotData, variable %in% c("B_mse1","B_mse2","B_mse3","B_mse4","gMSE"))
mseData$variable <- paste(mseData$variable)
qplot(x=log(n),y=log(value), data=mseData, color=Method) + facet_wrap(~variable*m)
diffMissInter <- subset(allData, Method=="IPW U1" | Method=="IPW xy")
missPlotData <- melt(diffMissInter, id.vars=c("Method","tau","m","rho","n","ycoef"))
knitr::opts_chunk$set(echo = TRUE)
allData <- NULL
for(n in c(100,500,1000,5000)){
allData <- rbind(allData, readRDS(paste0("goodHeteroxyBig_n",n,"_2022.RDS"))$results)
}
library(ggplot2)
library(reshape)
allData$Method <- paste(allData$Method,allData$x1Type)
allData <- allData[,-ncol(allData)]
diffMissInter <- allData
missPlotData <- melt(diffMissInter, id.vars=c("Method","tau","m","rho","n","ycoef"))
cData <- subset(missPlotData, variable %in% c("B_IntervalCoverage1","B_IntervalCoverage2","B_IntervalCoverage3","B_IntervalCoverage4"))
qplot(x=log(n),y=value, data=cData, color=Method) + facet_wrap(~variable*m)
mseData <- subset(missPlotData, variable %in% c("B_mse1","B_mse2","B_mse3","B_mse4","gMSE"))
mseData$variable <- paste(mseData$variable)
qplot(x=log(n),y=log(value), data=mseData, color=Method) + facet_wrap(~variable*m)
head(missPlotData)
biasData <- subset(missPlotData, variable %in% c("B1","B2","B3","B4"))
biasData$variable <- paste(biasData$variable)
qplot(x=log(n),y=log(value), data=mseData, color=Method) + facet_wrap(~variable*m)
biasData <- subset(missPlotData, variable %in% c("B1","B2","B3","B4"))
biasData$variable <- paste(biasData$variable)
qplot(x=log(n),y=log(value), data=mseData, color=Method) + facet_wrap(~variable*m)
biasData <- subset(missPlotData, variable %in% c("B1","B2","B3","B4"))
biasData$variable <- paste(biasData$variable)
qplot(x=log(n),y=log(value), data=biasData, color=Method) + facet_wrap(~variable*m)
biasData <- subset(missPlotData, variable %in% c("B1","B2","B3","B4"))
biasData$variable <- paste(biasData$variable)
qplot(x=log(n),y=value, data=biasData, color=Method) + facet_wrap(~variable*m)
biasData <- subset(missPlotData, variable %in% c("B1","B2","B3","B4"))
biasData$variable <- paste(biasData$variable)
qplot(x=sqrt(n),y=value, data=biasData, color=Method) + facet_wrap(~variable*m)
biasData <- subset(missPlotData, variable %in% c("B1","B2","B3","B4"))
biasData$variable <- paste(biasData$variable)
qplot(x=n,y=value, data=biasData, color=Method) + facet_wrap(~variable*m)
allData <- NULL
for(n in c(100,500,1000,5000)){
allData <- rbind(allData, readRDS(paste0("goodHeteroxyBig_n",n,"_2022.RDS"))$results)
}
library(ggplot2)
library(reshape)
allData$Method <- paste(allData$Method,allData$x1Type)
allData <- allData[,-ncol(allData)]
head(allData)
dim(allData)
allData
blah <- readRDS(paste0("goodHeteroxyBig_n",n,"_2022.RDS"))
n
allData <- NULL
for(n in c(100,500,1000,5000)){
allData <- rbind(allData, readRDS(paste0("goodHeteroxyBig_n",n,"_2022.RDS"))$results)
}
library(ggplot2)
library(reshape)
allData$Method <- paste(allData$Method,allData$x1Type)
allData <- allData[,-ncol(allData)]
readRDS(paste0("goodHeteroxyBig_n",n,"_2022.RDS"))
n
readRDS(paste0("goodHeteroxyBig_n",n,"_2022.RDS"))
readRDS(paste0("goodHeteroxyBig_n",n,"_2022.RDS"))$results
allData <- NULL
for(n in c(100,500,1000,5000)){
allData <- rbind(allData, readRDS(paste0("goodHeteroxyBig_n",n,"_2022.RDS"))$results)
}
library(ggplot2)
library(reshape)
allData$Method <- paste(allData$Method,allData$x1Type)
allData <- allData[,-ncol(allData)]
readRDS(paste0("goodHeteroxyBig_n",n,"_2022.RDS"))$results
n
allData <- rbind(allData, readRDS(paste0("goodHeteroxyBig_n",n,"_2022.RDS"))$results)
allData <- NULL
for(n in c(100,500,1000,5000)){
allData <- rbind(allData, readRDS(paste0("goodHeteroxyBig_n",n,"_2022.RDS"))$results)
}
library(ggplot2)
library(reshape)
allData$Method <- paste(allData$Method,allData$x1Type)
allData <- allData[,-ncol(allData)]
allData <- NULL
for(n in c(100,500,1000,5000)){
allData <- rbind(allData, readRDS(paste0("goodHeteroxyBig_n",n,"_2022.RDS"))$results)
}
library(ggplot2)
library(reshape)
allData$Method <- paste(allData$Method,allData$x1Type)
allData <- allData[,-ncol(allData)]
paste0("goodHeteroxyBig_n",n,"_2022.RDS")
readRDS(paste0("goodHeteroxyBig_n",n,"_2022.RDS"))
blah <- readRDS(paste0("goodHeteroxyBig_n",n,"_2022.RDS"))
n
allData <- NULL
for(n in c(100,500,1000,5000)){
allData <- rbind(allData, readRDS(paste0("goodHeteroxyBig_n",n,"_2022.RDS"))$results)
}
allData <- NULL
for(n in c(100,500,1000,5000)){
allData <- rbind(allData, readRDS(paste0("goodHeteroxyBig_n",n,"_2022.RDS"))$results)
}
library(ggplot2)
library(reshape)
allData$Method <- paste(allData$Method,allData$x1Type)
allData <- allData[,-ncol(allData)]
setwd("C:/Users/b157s966/Dropbox/QuantileDropouts/SIMSubmission2/submit2Sims/hetero")
allData <- NULL
for(n in c(100,500,1000,5000)){
allData <- rbind(allData, readRDS(paste0("goodHeteroxyBig_n",n,"_2022.RDS"))$results)
}
library(ggplot2)
library(reshape)
allData$Method <- paste(allData$Method,allData$x1Type)
allData <- allData[,-ncol(allData)]
readRDS(paste0("goodHeteroxyBig_n",n,"_2022.RDS"))
diffMissInter <- allData
missPlotData <- melt(diffMissInter, id.vars=c("Method","tau","m","rho","n","ycoef"))
cData <- subset(missPlotData, variable %in% c("B_IntervalCoverage1","B_IntervalCoverage2","B_IntervalCoverage3","B_IntervalCoverage4"))
qplot(x=log(n),y=value, data=cData, color=Method) + facet_wrap(~variable*m)
mseData
allData
table <- allData[,c(1:3,5,11:15)]
mseTable <- allData[,c(1:3,5,11:15)]
mseTable
mseTable <- allData[,c(1:3,5,11:15)]
for(i in 5:8){
mseTable[,i] <- signif(mseTable[,i],2)
}
mseTable
mseTable <- allData[,c(1:3,5,11:15)]
for(i in 5:9){
mseTable[,i] <- signif(mseTable[,i],2)
}
mseTable
mseTable <- allData[,c(1:3,5,11:15)]
for(i in 5:9){
mseTable[,i] <- round(mseTable[,i],4)
}
mseTable
mseData <- subset(missPlotData, variable %in% c("B_mse1","B_mse2","B_mse3","B_mse4","gMSE"))
mseData$variable <- paste(mseData$variable)
qplot(x=log(n),y=log(value), data=mseData, color=Method) + facet_wrap(~variable*m)
mseTable <- allData[,c(1:3,5,11:15)]
for(i in 5:9){
mseTable[,i] <- round(mseTable[,i],5)
}
mseTable
biasData <- subset(missPlotData, variable %in% c("B1","B2","B3","B4"))
biasData$variable <- paste(biasData$variable)
qplot(x=n,y=value, data=biasData, color=Method) + facet_wrap(~variable*m)
mseTable <- allData[,c(1:3,5,11:15)]
for(i in 5:9){
mseTable[,i] <- round(mseTable[,i],5)
}
mseTable
library(xtable)
xtable(mseTable)
mseTable <- allData[,c(1:3,5,11:15)]
for(i in 5:9){
mseTable[,i] <- round(mseTable[,i],5)
}
mseTable
library(xtable)
xtable(mseTable, digits=c(0,0,1,0,0,5,5,5,5,5))
mseTable <- allData[,c(1:3,5,11:15)]
for(i in 5:9){
mseTable[,i] <- round(mseTable[,i],5)
}
mseTable
library(xtable)
xmseHetero <- xtable(mseTable, digits=c(0,0,1,0,0,5,5,5,5,5))
print(xmseHetero, include.rownames=FALSE)
dim(mseTAble)
dim(mseTable)
seq(3,24,3)
mseTable <- allData[,c(1:3,5,11:15)]
for(i in 5:9){
mseTable[,i] <- round(mseTable[,i],5)
}
mseTable
library(xtable)
xmseHetero <- xtable(mseTable, digits=c(0,0,1,0,0,5,5,5,5,5))
print(xmseHetero, include.rownames=FALSE, hline.after=seq(3,24,3))
mseTable <- allData[,c(1:3,5,11:15)]
for(i in 5:9){
mseTable[,i] <- round(mseTable[,i],5)
}
mseTable
library(xtable)
xmseHetero <- xtable(mseTable, digits=c(0,0,1,0,0,5,5,5,5,5))
print(xmseHetero, include.rownames=FALSE, hline.after=seq(3,24,3))
mseTable
mseTable <- allData[,c(1,3,5,11:15)]
for(i in 5:9){
mseTable[,i] <- round(mseTable[,i],5)
}
mseTable <- allData[,c(1,3,5,11:15)]
for(i in 4:8){
mseTable[,i] <- round(mseTable[,i],5)
}
mseTable
library(xtable)
xmseHetero <- xtable(mseTable, digits=c(0,0,1,0,0,5,5,5,5,5))
mseTable <- allData[,c(1,3,5,11:15)]
for(i in 4:8){
mseTable[,i] <- round(mseTable[,i],5)
}
mseTable
library(xtable)
xmseHetero <- xtable(mseTable, digits=c(0,0,0,0,5,5,5,5,5))
print(xmseHetero, include.rownames=FALSE, hline.after=seq(3,24,3))
xmseHetero
names(xmasHetero)
colnames(xmasHetero)
xmseHetero
names(xmseHetero)
mseTable <- allData[,c(1,3,5,11:15)]
for(i in 4:8){
mseTable[,i] <- round(mseTable[,i],5)
}
mseTable
library(xtable)
xmseHetero <- xtable(mseTable, digits=c(0,0,0,0,5,5,5,5,5))
names(xmseHetero)[4] <- "$\mbox{MSE}(\hat{\beta}_1)$"
mseTable <- allData[,c(1,3,5,11:15)]
for(i in 4:8){
mseTable[,i] <- round(mseTable[,i],5)
}
mseTable
library(xtable)
xmseHetero <- xtable(mseTable, digits=c(0,0,0,0,5,5,5,5,5))
names(xmseHetero)[4] <- "$\\mbox{MSE}(\\hat{\beta}_1)$"
print(xmseHetero, include.rownames=FALSE, hline.after=seq(3,24,3))
mseTable <- allData[,c(1,3,5,11:15)]
for(i in 4:8){
mseTable[,i] <- round(mseTable[,i],5)
}
mseTable
library(xtable)
xmseHetero <- xtable(mseTable, digits=c(0,0,0,0,5,5,5,5,5))
print(xmseHetero, include.rownames=FALSE, hline.after=seq(3,24,3))
